(()=>{"use strict";var n={342:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,".grid-container{\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    row-gap: 20px;\n    column-gap: 30px;\n    height: 80%;\n}\n.box{\n    padding: 10px;\n    border-radius: 10px;\n    background-color: #ffff;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n}\n.box-title{\n    font-size: 1rem;\n    color: grey;\n}\n.temp, .humidity, .clouds, .visibility{\n    text-align: center;\n    font-size: 3rem;\n}\n.wind{\n    text-align: center;\n    font-size: 2.5rem;\n\n}\n.sun, .minmax{\n    font-size: 2.5rem;\n}\n.minmax{\n    text-align: center;\n}\n.sunset, .sunrise, .min, .max{\n    margin: 0;\n}\ni{\n    color: #1746A2;\n}\n@media screen and (max-width: 1050px){\n    .grid-container{\n        grid-template-columns: repeat(2, 1fr);\n    }\n    .temp, .humidity, .clouds, .visibility, .wind,.sun, .minmax{\n        font-size: 2rem;\n    }\n}\n@media screen and (max-width: 500px){\n    .temp, .humidity, .clouds, .visibility, .wind,.sun, .minmax{\n        font-size: 1rem;\n    }\n}\n","",{version:3,sources:["webpack://./src/css/highlights.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,qCAAqC;IACrC,kCAAkC;IAClC,aAAa;IACb,gBAAgB;IAChB,WAAW;AACf;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,qDAAqD;AACzD;AACA;IACI,eAAe;IACf,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,iBAAiB;;AAErB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,SAAS;AACb;AACA;IACI,cAAc;AAClB;AACA;IACI;QACI,qCAAqC;IACzC;IACA;QACI,eAAe;IACnB;AACJ;AACA;IACI;QACI,eAAe;IACnB;AACJ",sourcesContent:[".grid-container{\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    row-gap: 20px;\n    column-gap: 30px;\n    height: 80%;\n}\n.box{\n    padding: 10px;\n    border-radius: 10px;\n    background-color: #ffff;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n}\n.box-title{\n    font-size: 1rem;\n    color: grey;\n}\n.temp, .humidity, .clouds, .visibility{\n    text-align: center;\n    font-size: 3rem;\n}\n.wind{\n    text-align: center;\n    font-size: 2.5rem;\n\n}\n.sun, .minmax{\n    font-size: 2.5rem;\n}\n.minmax{\n    text-align: center;\n}\n.sunset, .sunrise, .min, .max{\n    margin: 0;\n}\ni{\n    color: #1746A2;\n}\n@media screen and (max-width: 1050px){\n    .grid-container{\n        grid-template-columns: repeat(2, 1fr);\n    }\n    .temp, .humidity, .clouds, .visibility, .wind,.sun, .minmax{\n        font-size: 2rem;\n    }\n}\n@media screen and (max-width: 500px){\n    .temp, .humidity, .clouds, .visibility, .wind,.sun, .minmax{\n        font-size: 1rem;\n    }\n}\n"],sourceRoot:""}]);const A=o},872:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,".hour{\n    height: 85%;\n    width: 100%;\n    margin: auto;\n    border-radius: 10px;\n    display:grid;\n    grid-template-columns: repeat(4, 1fr);\n    column-gap: 15px;\n    grid-template-rows: 1;\n}\n.single-hour{\n    align-self: stretch;\n    background-color: #fff;\n    height: 90%;\n    border-radius: 10px;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    text-align: center;\n\n}\nh3{\n    text-align: center;\n}\n.hour-temp{\n margin-top: 0;\n}\n@media screen and (max-width: 800px){\n    .hour{\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n@media screen and (max-width: 500px){\n    .single-hour > p{\n        font-size: 1rem;\n    }\n}\n","",{version:3,sources:["webpack://./src/css/hourlyDisplay.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,qCAAqC;IACrC,gBAAgB;IAChB,qBAAqB;AACzB;AACA;IACI,mBAAmB;IACnB,sBAAsB;IACtB,WAAW;IACX,mBAAmB;IACnB,qDAAqD;IACrD,kBAAkB;;AAEtB;AACA;IACI,kBAAkB;AACtB;AACA;CACC,aAAa;AACd;AACA;IACI;QACI,qCAAqC;IACzC;AACJ;AACA;IACI;QACI,eAAe;IACnB;AACJ",sourcesContent:[".hour{\n    height: 85%;\n    width: 100%;\n    margin: auto;\n    border-radius: 10px;\n    display:grid;\n    grid-template-columns: repeat(4, 1fr);\n    column-gap: 15px;\n    grid-template-rows: 1;\n}\n.single-hour{\n    align-self: stretch;\n    background-color: #fff;\n    height: 90%;\n    border-radius: 10px;\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    text-align: center;\n\n}\nh3{\n    text-align: center;\n}\n.hour-temp{\n margin-top: 0;\n}\n@media screen and (max-width: 800px){\n    .hour{\n        grid-template-columns: repeat(2, 1fr);\n    }\n}\n@media screen and (max-width: 500px){\n    .single-hour > p{\n        font-size: 1rem;\n    }\n}\n"],sourceRoot:""}]);const A=o},803:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,"main{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    display: flex;\n    height: auto;\n    height: 100%;\n    width: 100vw;\n    font-family: 'Poppins', sans-serif;\n}\n.right-container{\n    background-color: #EEEEEE;\n    width: 75%;\n    display: flex;\n    flex-direction: column;\n    height: auto;\n}\n\n.left-container{\n    box-sizing: border-box;\n    align-items: center;\n    text-align: center;\n    width: 25%;\n    padding-top: 2%;\n    height: auto;\n\n}\n.err-msg{\n    padding: 0 10px;\n    font-size: 0.7rem;\n    color: red;\n    height: 40px;\n}\n.left-data-container{\n    padding: 0 5% 5%;\n}\n.form{\n    width: 100%;\n}\ninput{\n    box-sizing: border-box;\n    width: 80%;\n    height: 50px;\n    border-radius: 10px;\n    border: none;\n    padding: 0 20px ;\n    transition: all 0.2s ease-in-out;\n}\nbutton{\n  cursor: pointer;\n}\nbutton:hover{\n transform: scale(1.1);\n}\ninput::placeholder{\n    font-size: 1rem;\n}\nh1{\n    font-size: 6.5rem;\n    margin: 0;\n}\n.zone-container{\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    justify-content: center;\n    border-bottom: 2px solid grey;\n    text-align: left;\n    margin: auto;\n    margin-bottom: 30px;\n    width: 60%;\n}\n.zone-container > p{\n    margin-top: 0;\n}\np{\n    /* margin: 0; */\n    font-size: 1.2rem;\n}\n\nbutton{\n    font-size: 1.5rem;\n    border: none;\n    background-color: transparent;\n\n}\n.hourly-container{\n    padding: 0 4%;\n    height: 30%;\n}\n.daily-container{\n    height: 70%;\n    padding: 2% 5%;\n    text-align: center;\n\n}\n\n@media screen and (max-width: 800px){\n    main{\n        flex-direction: column;\n    }\n    .left-data-container > img, .cloud-percent, .weather-desc{\n        display: none;\n    }\n    form{\n        width: 100%;\n    }\n    .left-container{\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n    }\n    h1{\n        font-size: 4rem;\n    }\n    .left-data-container{\n        display: flex;\n        flex-direction: column;\n        width: 90%;\n        font-size: 0.8rem;\n\n    }\n\n    .zone-container{\n        flex-direction: row;\n        width: 100%;\n        justify-content: space-around;\n    }\n    .right-container{\n        width: 100%;\n    }\n    .grid-container{\n        grid-template-columns: repeat(2, 1fr);\n    }\n    .hourly-container{\n        height: auto;\n    }\n}\n@media screen and (max-width: 500px){\n    .right-container{\n       height: auto;\n    }\n}\n@media screen and (max-width: 1250px){\n    h1{\n        font-size: 4rem;\n    }\n    .zone-container > p{\n        font-size: 1rem;\n    }\n    .left-data-container > p{\n        font-size: 1rem;\n    }\n\n}\n","",{version:3,sources:["webpack://./src/css/weatherpage.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,kCAAkC;AACtC;AACA;IACI,yBAAyB;IACzB,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,UAAU;IACV,eAAe;IACf,YAAY;;AAEhB;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,UAAU;IACV,YAAY;AAChB;AACA;IACI,gBAAgB;AACpB;AACA;IACI,WAAW;AACf;AACA;IACI,sBAAsB;IACtB,UAAU;IACV,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,gBAAgB;IAChB,gCAAgC;AACpC;AACA;EACE,eAAe;AACjB;AACA;CACC,qBAAqB;AACtB;AACA;IACI,eAAe;AACnB;AACA;IACI,iBAAiB;IACjB,SAAS;AACb;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,uBAAuB;IACvB,6BAA6B;IAC7B,gBAAgB;IAChB,YAAY;IACZ,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,aAAa;AACjB;AACA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,6BAA6B;;AAEjC;AACA;IACI,aAAa;IACb,WAAW;AACf;AACA;IACI,WAAW;IACX,cAAc;IACd,kBAAkB;;AAEtB;;AAEA;IACI;QACI,sBAAsB;IAC1B;IACA;QACI,aAAa;IACjB;IACA;QACI,WAAW;IACf;IACA;QACI,aAAa;QACb,sBAAsB;QACtB,WAAW;IACf;IACA;QACI,eAAe;IACnB;IACA;QACI,aAAa;QACb,sBAAsB;QACtB,UAAU;QACV,iBAAiB;;IAErB;;IAEA;QACI,mBAAmB;QACnB,WAAW;QACX,6BAA6B;IACjC;IACA;QACI,WAAW;IACf;IACA;QACI,qCAAqC;IACzC;IACA;QACI,YAAY;IAChB;AACJ;AACA;IACI;OACG,YAAY;IACf;AACJ;AACA;IACI;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;IACA;QACI,eAAe;IACnB;;AAEJ",sourcesContent:["main{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    display: flex;\n    height: auto;\n    height: 100%;\n    width: 100vw;\n    font-family: 'Poppins', sans-serif;\n}\n.right-container{\n    background-color: #EEEEEE;\n    width: 75%;\n    display: flex;\n    flex-direction: column;\n    height: auto;\n}\n\n.left-container{\n    box-sizing: border-box;\n    align-items: center;\n    text-align: center;\n    width: 25%;\n    padding-top: 2%;\n    height: auto;\n\n}\n.err-msg{\n    padding: 0 10px;\n    font-size: 0.7rem;\n    color: red;\n    height: 40px;\n}\n.left-data-container{\n    padding: 0 5% 5%;\n}\n.form{\n    width: 100%;\n}\ninput{\n    box-sizing: border-box;\n    width: 80%;\n    height: 50px;\n    border-radius: 10px;\n    border: none;\n    padding: 0 20px ;\n    transition: all 0.2s ease-in-out;\n}\nbutton{\n  cursor: pointer;\n}\nbutton:hover{\n transform: scale(1.1);\n}\ninput::placeholder{\n    font-size: 1rem;\n}\nh1{\n    font-size: 6.5rem;\n    margin: 0;\n}\n.zone-container{\n    display: flex;\n    flex-direction: column;\n    align-items: left;\n    justify-content: center;\n    border-bottom: 2px solid grey;\n    text-align: left;\n    margin: auto;\n    margin-bottom: 30px;\n    width: 60%;\n}\n.zone-container > p{\n    margin-top: 0;\n}\np{\n    /* margin: 0; */\n    font-size: 1.2rem;\n}\n\nbutton{\n    font-size: 1.5rem;\n    border: none;\n    background-color: transparent;\n\n}\n.hourly-container{\n    padding: 0 4%;\n    height: 30%;\n}\n.daily-container{\n    height: 70%;\n    padding: 2% 5%;\n    text-align: center;\n\n}\n\n@media screen and (max-width: 800px){\n    main{\n        flex-direction: column;\n    }\n    .left-data-container > img, .cloud-percent, .weather-desc{\n        display: none;\n    }\n    form{\n        width: 100%;\n    }\n    .left-container{\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n    }\n    h1{\n        font-size: 4rem;\n    }\n    .left-data-container{\n        display: flex;\n        flex-direction: column;\n        width: 90%;\n        font-size: 0.8rem;\n\n    }\n\n    .zone-container{\n        flex-direction: row;\n        width: 100%;\n        justify-content: space-around;\n    }\n    .right-container{\n        width: 100%;\n    }\n    .grid-container{\n        grid-template-columns: repeat(2, 1fr);\n    }\n    .hourly-container{\n        height: auto;\n    }\n}\n@media screen and (max-width: 500px){\n    .right-container{\n       height: auto;\n    }\n}\n@media screen and (max-width: 1250px){\n    h1{\n        font-size: 4rem;\n    }\n    .zone-container > p{\n        font-size: 1rem;\n    }\n    .left-data-container > p{\n        font-size: 1rem;\n    }\n\n}\n"],sourceRoot:""}]);const A=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(o[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);i&&o[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},o=[],A=0;A<n.length;A++){var s=n[A],d=i.base?s[0]+i.base:s[0],c=r[d]||0,l="".concat(d," ").concat(c);r[d]=c+1;var p=t(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=a(m,i);i.byIndex=A,e.splice(A,0,{identifier:l,updater:u,references:1})}o.push(l)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=i(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var A=t(r[o]);e[A].references--}for(var s=i(n,a),d=0;d<r.length;d++){var c=t(r[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},364:(n,e,t)=>{async function i(n){try{let e=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${n},{us}&appid=84be7224f83f2b9047883638524cc4d6`,{mode:"cors"}),t=await e.json();return[t[0].lat,t[0].lon]}catch(n){throw new Error("oops... This location is no where to be found. :( Please try again! ¯\\_(ツ)_/¯")}}function a(n){let e=new Date(1e3*n),t=e.getHours()%12,i=0===t?12:t,a=e.getHours()>12?"PM":"AM";return`${i}:${e.getMinutes()<10?e.getMinutes()+"0":e.getMinutes()} ${a}`}t.r(e),t.d(e,{getCoordinates:()=>i,getTime:()=>a})}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),a=t.n(i),r=t(569),o=t.n(r),A=t(565),s=t.n(A),d=t(216),c=t.n(d),l=t(589),p=t.n(l),m=t(803),u={};u.styleTagTransform=p(),u.setAttributes=s(),u.insert=o().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=c(),e()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;let C=t(364);const h=async function(n){try{let e=await C.getCoordinates(n),t=e[0],i=e[1];const a=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t}&lon=${i}&units=imperial&appid=84be7224f83f2b9047883638524cc4d6`,{mode:"cors"});return await a.json()}catch(n){throw new Error("oops... This location is no where to be found. Please try again! ¯\\_(ツ)_/¯")}};var f=t(342),g={};g.styleTagTransform=p(),g.setAttributes=s(),g.insert=o().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=c(),e()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;let I=t(364);function x(n){const e=document.createElement("div");e.classList.add("grid-container"),["Feels like...","Wind Status","Sunset & Sunrise","Humidity","Visibility","Min & Max"].forEach(((n,t)=>{let i=document.createElement("div");i.classList.add("box",`box${t}`);let a=document.createElement("p");a.classList.add("box-title"),a.textContent=n,i.appendChild(a),e.appendChild(i)}));let t=e.querySelector(".box0"),i=document.createElement("p");i.innerHTML=`<i class="fa-solid fa-temperature-three-quarters"></i>  ${Math.floor(n.main.feels_like)}°`,i.classList.add("temp"),t.appendChild(i);let a=e.querySelector(".box1"),r=document.createElement("p");r.innerHTML=`<i class="fa-solid fa-wind"></i>  ${n.wind.speed} mph`,r.classList.add("wind"),a.appendChild(r);let o=e.querySelector(".box2"),A=I.getTime(n.sys.sunrise),s=document.createElement("p");s.innerHTML=`<i class="fa-solid fa-cloud-sun"></i> ${A}`,s.classList.add("sunrise","sun"),o.appendChild(s);let d=I.getTime(n.sys.sunset),c=document.createElement("p");c.innerHTML=`<i class="fa-solid fa-cloud-moon"></i> ${d}`,c.classList.add("sunset","sun"),o.appendChild(c);let l=e.querySelector(".box3"),p=document.createElement("p");p.innerHTML=`<i class="fa-solid fa-droplet"></i> ${n.main.humidity}%`,p.classList.add("humidity"),l.appendChild(p);let m=e.querySelector(".box4"),u=document.createElement("p");u.innerHTML=`<i class="fa-solid fa-eye"></i> ${n.visibility/1e3} mi`,u.classList.add("visibility"),m.appendChild(u);let C=e.querySelector(".box5"),h=document.createElement("p");h.innerHTML=`<i class="fa-solid fa-temperature-arrow-up"></i> ${Math.floor(n.main.temp_min)}°`,h.classList.add("min","minmax"),C.appendChild(h);let f=document.createElement("p");return f.innerHTML=`<i class="fa-solid fa-temperature-arrow-down"></i> ${Math.floor(n.main.temp_max)}°`,f.classList.add("max","minmax"),C.appendChild(f),e}let B=t(364);function b(n){let e=new Date(1e3*n.dt).toLocaleDateString("en-us",{year:"numeric",month:"long",day:"numeric"}),t=B.getTime(n.dt);return`<img src='https://openweathermap.org/img/wn/${n.weather[0].icon}.png' width='200' height='200'>\n    <h1>${Math.floor(n.main.temp)}°</h1>\n    <div class="zone-container">\n    <p class="date"><i class="fa-regular fa-calendar-days"></i> ${e}</p>\n    <p class="time"><i class="fa-regular fa-clock"></i> ${t}</p>\n    </div>\n    <p class="cloud-percent"><i class="fa-solid fa-cloud"></i> Cloud Percentage: ${n.clouds.all}%</p>\n    <p class="weather-desc">${n.weather[0].description}</p>\n    <p>${n.name}, ${n.sys.country}</p>`}var y=t(872),w={};w.styleTagTransform=p(),w.setAttributes=s(),w.insert=o().bind(null,"head"),w.domAPI=a(),w.insertStyleElement=c(),e()(y.Z,w),y.Z&&y.Z.locals&&y.Z.locals;let v=t(364);function E(){let n=document.createElement("div");return n.classList.add("hour"),(async()=>{let e=await async function(){const n=await fetch("https://api.openweathermap.org/data/2.5/forecast?lat=32.715736&lon=-117.161087&cnt=4&units=imperial&appid=84be7224f83f2b9047883638524cc4d6",{mode:"cors"});return(await n.json()).list}();for(let t=0;t<e.length;t++){let i=document.createElement("div"),a=v.getTime(e[t].dt),r=document.createElement("p");r.innerHTML=a,i.appendChild(r);let o=document.createElement("img");o.src=`https://openweathermap.org/img/wn/${e[t].weather[0].icon}.png`,i.appendChild(o);let A=document.createElement("p");A.innerHTML=`${Math.floor(e[t].main.temp)}°`,A.classList.add("hour-temp"),i.appendChild(A),i.classList.add("single-hour"),n.appendChild(i)}})(),n}document.querySelector(".content").appendChild(function(){let n,e=document.createElement("main"),t=document.createElement("section");t.classList.add("left-container"),e.appendChild(t);let i=document.createElement("section");i.classList.add("right-container"),e.appendChild(i);let a=document.createElement("form");a.innerHTML='<input type="text" name="city" id="city" placeholder="Search for places"/ required>';let r=document.createElement("button");r.innerHTML="<i class='fa-solid fa-magnifying-glass'></i>",a.appendChild(r),t.appendChild(a);let o=document.createElement("p");o.classList.add("err-msg"),t.appendChild(o);let A=document.createElement("div");A.classList.add("left-data-container"),t.appendChild(A);let s=document.createElement("div"),d=document.createElement("h3");d.textContent="Hourly",s.classList.add("hourly-container"),s.appendChild(d),i.appendChild(s);let c=document.createElement("h3");c.textContent="Today's Hightlights";let l=document.createElement("div");return l.classList.add("daily-container"),l.appendChild(c),i.appendChild(l),document.addEventListener("DOMContentLoaded",(async function(){n=await h("San+Diego"),A.innerHTML=b(n),l.appendChild(x(n)),s.appendChild(E())})),a.addEventListener("submit",(async e=>{e.preventDefault();let t=city.value.replace(/ /g,"+");try{n=await h(t),o.innerHTML="",l.removeChild(document.querySelector(".grid-container")),s.removeChild(document.querySelector(".hour")),A.innerHTML=b(n),l.appendChild(x(n)),s.appendChild(E())}catch(e){o.innerHTML=e}})),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,